usethis::use_github_action_check_standard()
use_git()
sticker(
subplot = "frametest.png",
s_x = 1,
s_y = 1,
s_height = 0.8,
s_width = 0.8,
package = "lmForc",
p_size = 5,
p_color = "black",
h_fill = "green",
filename = "lmForc.png"
)
install.packages(devtools)
install.packages(available)
install.packages('devtools')
install.packages('available')
library(usethis)
# Pull current expenses_db.
expense_db <- read_csv("/Users/nelsonrayl/Desktop/init/icarus/db/expense_db.csv")
library(tidyverse)
library(readr)
# Pull current expenses_db.
expense_db <- read_csv("/Users/nelsonrayl/Desktop/init/icarus/db/expense_db.csv")
View(expense_db)
# Load package.
devtools::load_all("/Users/nelsonrayl/Desktop/init/lmForc/lmForc")
library(devtools)
library(available)
library(rhub)
setwd("/Users/nelsonrayl/Desktop/init/lmForc/lmForc")
?check
?devtools::check
find.package("methods")
devtools::check("/Library/Frameworks/R.framework/Resources/library/methods")
devtools::check_built("/Library/Frameworks/R.framework/Resources/library/methods")
base::path.package("methods")
# Run R-CMD-Check on downstream files in NAMESPACE.
base::find.package("methods")
devtools::check("/Library/Frameworks/R.framework/Versions/4.0/Resources/library/methods")
as.package("/Library/Frameworks/R.framework/Versions/4.0/Resources/library/methods")
devtools::check(pkg = as.package("/Library/Frameworks/R.framework/Versions/4.0/Resources/library/methods"))
# Run R-CMD-Check on downstream files in NAMESPACE.
base::find.package("methods")
.libPaths()
version
# Run R-CMD-Check on downstream files in NAMESPACE.
base::find.package("stats")
base::path.package("stats")
devtools::check("/Library/Frameworks/R.framework/Resources/library/stats")
base::path.package("stats")
devtools::check("/Library/Frameworks/R.framework/Versions/4.0/Resources/library/stats")
?devtools::use_revdep
?devtools::revdep
library(devtools)
library(available)
library(rhub)
setwd("/Users/nelsonrayl/Desktop/init/lmForc/lmForc")
# Load package.
devtools::load_all("/Users/nelsonrayl/Desktop/init/lmForc/lmForc")
# Compile package documentation.
devtools::document()
# Build vignette.
devtools::build_vignettes()
# Re-build package.
devtools::build("/Users/nelsonrayl/Desktop/init/lmForc/lmForc")
# Run expectation tests.
devtools::test()
# Run R-CMD-Check locally.
devtools::check()
install.packages("remotes")
library(remotes)
library(remotes)
remotes::install_github("lucius-verus-fan/lmForc")
library(lmForc)
library(devtools)
library(available)
library(rhub)
setwd("/Users/nelsonrayl/Desktop/init/lmForc/lmForc")
# Load package.
devtools::load_all("/Users/nelsonrayl/Desktop/init/lmForc/lmForc")
# Run R-CMD-Check locally.
devtools::check()
vignette("lmForc", package = "lmForc")
# Release package to CRAN.
devtools::release()
devtools::spell_check()
devtools::spell_check()
# Release package to CRAN.
devtools::release()
devtools::check_win_devel()
